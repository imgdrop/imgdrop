name: Build & Checks
on: push

jobs:
  install:
    name: Install Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: yarn --frozen-lockfile
      - uses: actions/cache@v1
        with:
          key: install-${{ github.sha }}
          path: node_modules

  emsdk:
    name: Install EMSDK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: git clone https://github.com/emscripten-core/emsdk.git
      - run: emsdk/emsdk install latest
      - run: emsdk/emsdk activate latest
      - uses: actions/cache@v1
        with:
          key: emsdk-${{ github.sha }}
          path: emsdk

  webp:
    name: Build WebP
    runs-on: ubuntu-latest
    needs:
      - emsdk
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/cache@v1
        with:
          key: emsdk-${{ github.sha }}
          path: emsdk
      - run: source emsdk/emsdk_env.sh && make -C wasm/webp
      - uses: actions/cache@v1
        with:
          key: webp-${{ github.sha }}
          path: wasm/webp

  build:
    name: Build Website
    runs-on: ubuntu-latest
    needs:
      - install
      - webp
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/cache@v1
        with:
          key: install-${{ github.sha }}
          path: node_modules
      - uses: actions/cache@v1
        with:
          key: webp-${{ github.sha }}
          path: wasm/webp
      - run: yarn build
      - uses: actions/cache@v1
        with:
          key: build-${{ github.sha }}
          path: dist

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/cache@v1
        with:
          key: install-${{ github.sha }}
          path: node_modules
      - uses: actions/cache@v1
        with:
          key: build-${{ github.sha }}
          path: dist
      - run: yarn deploy --token ${{ secrets.FIREBASE_TOKEN }}
